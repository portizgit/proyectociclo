/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import cliente.Client;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import protocolo.ClientProtocol;

/**
 *
 * @author pablo
 * Esta clase gestiona las excursiones creadas y programadas por la escuela.
 */
public class ExcursionPrincipal extends javax.swing.JPanel {
     String nombre, descripcion,vientomax,lluvia,usuarioescuela;
     ClientProtocol cpl;
     String lista="excursiones";
     
    /**
     * Creates new form ExcursionPrincipal
     */
    public ExcursionPrincipal(String usuarioescuela) {
        cpl=Client.getClientProtocol();
        this.usuarioescuela=usuarioescuela;
        initComponents();
        colocaValores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txNombre = new javax.swing.JTextField();
        cbLluvia = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        txVientoMax = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txDescrip = new javax.swing.JTextArea();
        bCrear = new javax.swing.JButton();
        labelLista = new javax.swing.JLabel();
        bAtras = new javax.swing.JButton();
        jlNotif = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelExcursiones = new javax.swing.JPanel();

        setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo-login.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setText("EXCURSIONES");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
        );

        jLabel3.setText("Nombre");

        cbLluvia.setText("Se permite lluvia");
        cbLluvia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLluviaActionPerformed(evt);
            }
        });

        jLabel5.setText("Viento máximo (km/h)");

        jLabel7.setText("Descripción (Max 255 caracteres)");

        txDescrip.setColumns(20);
        txDescrip.setDocument(new LimitedStyledDocument(255));
        txDescrip.setLineWrap(true);
        txDescrip.setRows(5);

        bCrear.setText("Crear excursión");
        bCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCrearActionPerformed(evt);
            }
        });

        labelLista.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelLista.setText("EXCURSIONES CREADAS");

        bAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/atras.png"))); // NOI18N
        bAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAtrasActionPerformed(evt);
            }
        });

        jlNotif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/list.png"))); // NOI18N

        panelExcursiones.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panelExcursionesLayout = new javax.swing.GroupLayout(panelExcursiones);
        panelExcursiones.setLayout(panelExcursionesLayout);
        panelExcursionesLayout.setHorizontalGroup(
            panelExcursionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelExcursionesLayout.setVerticalGroup(
            panelExcursionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 521, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panelExcursiones);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(149, 149, 149)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bAtras)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 766, Short.MAX_VALUE)
                        .addComponent(jlNotif)
                        .addGap(62, 62, 62))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(27, 27, 27)
                                                .addComponent(cbLluvia))
                                            .addComponent(txVientoMax, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txDescrip, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(bCrear))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(labelLista)
                .addGap(207, 207, 207))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bAtras)
                            .addComponent(jlNotif)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbLluvia))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txVientoMax, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txDescrip, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(bCrear)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(labelLista)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 37, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70))))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbLluviaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLluviaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbLluviaActionPerformed
/**
 * Al pulsar el botón crear se validan los campos necesarios para crear una nueva excursión, si los datos son correcto se realiza una petición al
 * servidor mediante el protocolo del cliente para que la cree.
 * @param evt 
 */
    private void bCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCrearActionPerformed
         try {
             nombre=txNombre.getText();
             descripcion=txDescrip.getText();
             if(cbLluvia.isSelected()){
                 lluvia="1";
             }else{
                 lluvia="0";
             }
             vientomax=txVientoMax.getText();
               if (nombre.equals("") || descripcion.equals("") || vientomax.equals("")) {

                JOptionPane.showMessageDialog(this, "No puede dejar ningún campo vacío", "Error", JOptionPane.ERROR_MESSAGE);
            }else{

                JSONObject respuesta = cpl.newExcursion(nombre, descripcion, vientomax, lluvia, usuarioescuela);
                if (respuesta.getString("resultado").equals("incorrecto")) {
                    JOptionPane.showMessageDialog(this, "No se ha podido crear la excursión", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Excursión creada", "Correcto", JOptionPane.INFORMATION_MESSAGE);
                    panelExcursiones.removeAll();
                    initCreadas();
                }
            }
         } catch (JSONException ex) {
             Logger.getLogger(ExcursionPrincipal.class.getName()).log(Level.SEVERE, null, ex);
         }
       
    }//GEN-LAST:event_bCrearActionPerformed
/**
 * Pulsando el botón de atrás se vuelve a la pantalla principal de la escuela
 * @param evt 
 */
    private void bAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAtrasActionPerformed
          PrincipalFrame f = (PrincipalFrame) SwingUtilities.windowForComponent(bAtras);
        Dimension ss = Toolkit.getDefaultToolkit().getScreenSize();
        f.setBounds(ss.width / 2 - Principal.width / 2,
                ss.height / 2 - Principal.height / 2,
                Principal.width, Principal.height);
        Principal pp = new Principal(usuarioescuela);
        f.setContentPane(pp);
        f.pack();
        f.setSize(958, 725);
        f.setVisible(true);       
    }//GEN-LAST:event_bAtrasActionPerformed
  /**
     * Este método es el que se encarga de mostrar las excursiones creadas en el panel de la derecha.
     * Se obtienen las solicitudes y se crea un objeto Panel que será el que se va a mostrar.
     */
    public void initCreadas(){
        panelExcursiones.setLayout(new BoxLayout(panelExcursiones, BoxLayout.Y_AXIS));
          try {
     
         String nombre,viento,lluvia,descripcion;
         int id,activa;
             JSONObject respuesta = cpl.getExcursiones(Client.nombreescuela);
             JSONArray array = respuesta.getJSONArray("excursiones");
             int solicitudes=0;
             for (int i = 0; i < array.length(); i++) {
             
                 JSONObject row = array.getJSONObject(i);
                 id=row.getInt("id");
                 nombre=row.getString("nombre");
                 viento=row.getString("vientomax");
                 lluvia=row.getString("poslluvia");
                 descripcion=row.getString("descripcion");
                 activa=row.getInt("activa");
                 if(activa!=1){
                 PanelExcursion newPanel = new PanelExcursion(nombre,descripcion,viento,lluvia,id);
                panelExcursiones.add(newPanel);
                panelExcursiones.revalidate();
                 }
               
             }
        
       
        panelExcursiones.setVisible(true);
                  } catch (JSONException ex) {
             Logger.getLogger(ExcursionPrincipal.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }
    /**
     * Este método es el que se encarga de mostrar las excursiones programadas en el panel de la derecha.
     * Se obtienen las solicitudes y se crea un objeto Panel que será el que se va a mostrar.
     */
    public void initProgramadas(){
        panelExcursiones.setLayout(new BoxLayout(panelExcursiones, BoxLayout.Y_AXIS));
          try {
     
         String nombre,fecha,participantes;
        
         int id,nparticipantes,activa,activaprog;
             JSONObject respuesta = cpl.getActividadesProgramadas(Client.nombreescuela,"excursion");
             JSONArray array = respuesta.getJSONArray("actividades");
             int solicitudes=0,pactual=0;
             for (int i = 0; i < array.length(); i++) {
             
                 JSONObject row = array.getJSONObject(i);
                 id=row.getInt("id");
                 nombre=row.getString("nombre");
                 nparticipantes=row.getInt("participantes");
                 participantes=Integer.toString(nparticipantes);
                 fecha=row.getString("fecha");
                activa=row.getInt("activa");
                activaprog=row.getInt("activaprog");
                pactual=row.getInt("pactual");
                if(activa!=1 && activaprog!=1){
                 PanelExcProgramada newPanel = new PanelExcProgramada(nombre,fecha,participantes,id,pactual);
                panelExcursiones.add(newPanel);
                panelExcursiones.revalidate();
                }
               
             }
        
       
        panelExcursiones.setVisible(true);
                  } catch (JSONException ex) {
             Logger.getLogger(ExcursionPrincipal.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }
    /**
     * Este método se ejecuta al inicio del panel de excursiones y coloca las excursiones creadas en el panel de la derecha. También 
     * controla el funcionamiento del icono lista, que nos permite cambiar entre que se muestren las excursiones creadas o las programadas.
     */
    public void colocaValores(){
       
           initCreadas();
          jlNotif.addMouseListener(new MouseAdapter()
            {
                public void mouseClicked(MouseEvent e)
                {
                    if(lista.equals("excursiones")){
                       
                        panelExcursiones.removeAll();
                        initProgramadas();
                        labelLista.setText("EXCURSIONES PROGRAMADAS");
                        lista="programadas";
                        
                    }else{
                        panelExcursiones.removeAll();
                        initCreadas();
                        labelLista.setText("EXCURSIONES CREADAS");
                        lista="excursiones";
                    }
                }
            }); 
             
         
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAtras;
    private javax.swing.JButton bCrear;
    private javax.swing.JCheckBox cbLluvia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlNotif;
    private javax.swing.JLabel labelLista;
    private javax.swing.JPanel panelExcursiones;
    private javax.swing.JTextArea txDescrip;
    private javax.swing.JTextField txNombre;
    private javax.swing.JTextField txVientoMax;
    // End of variables declaration//GEN-END:variables
}
