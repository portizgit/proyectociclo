/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import cliente.Client;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.json.JsonObject;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenuBar;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.border.LineBorder;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import protocolo.ClientProtocol;

/**
 *
 * @author pablo
 */
public class Principal extends javax.swing.JPanel {
    /**
     * Esta clase contiene el panel que es el principal de la escuela
     */
    String usuarioescuela;
    String nombre;
    String gerente;
    String direccion;
    String latitud;
    String longitud;
    String descripcion;
    String contrasena;
    int colectivas;
    int individuales;
    int excursiones;
    int alquilerkayak;
    int alquilersurf;
    int posibilidadsurfear;
    ClientProtocol cpl;
    boolean activosurf=true,activokayak=true,activoexc=true,activocolec=true,activoindv=true, activonotif=false;
    /**
     * Creates new form Principal
     */
     static int width=962;
    static int height=768;
    public Principal(String usuarioescuela) {
        this.usuarioescuela=usuarioescuela;
        cpl=Client.getClientProtocol();
        initComponents();
        colocaValores();
        
    }

 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jlNombre = new javax.swing.JLabel();
        jlDireccion = new javax.swing.JLabel();
        jlGerente = new javax.swing.JLabel();
        jlIndividuales = new javax.swing.JLabel();
        jlColectivas = new javax.swing.JLabel();
        jlSurf = new javax.swing.JLabel();
        jlKayak = new javax.swing.JLabel();
        jlExcursiones = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        bSi = new javax.swing.JButton();
        bNo = new javax.swing.JButton();
        jlTiempo = new javax.swing.JLabel();
        jlNotificacionesTiempo = new javax.swing.JLabel();
        bConfiguracion = new javax.swing.JButton();
        bSalir = new javax.swing.JButton();
        bEditaPosibilidad = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo-login.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Escuela: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Localización: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Gerente: ");

        jlNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlNombre.setText("jLabel5");

        jlDireccion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlDireccion.setText("jLabel5");

        jlGerente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlGerente.setText("jLabel5");

        jlIndividuales.setFont(new java.awt.Font("SimHei", 1, 14)); // NOI18N
        jlIndividuales.setText("          CLASES INDIVIDUALES");
        jlIndividuales.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 255), 3, true));

        jlColectivas.setFont(new java.awt.Font("SimHei", 1, 14)); // NOI18N
        jlColectivas.setText("           CLASES COLECTIVAS");
        jlColectivas.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 255), 3, true));

        jlSurf.setFont(new java.awt.Font("SimHei", 1, 14)); // NOI18N
        jlSurf.setText("             ALQUILER SURF");
        jlSurf.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 3, true));

        jlKayak.setFont(new java.awt.Font("SimHei", 1, 14)); // NOI18N
        jlKayak.setText("            ALQUILER KAYAK");
        jlKayak.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 51), 3, true));

        jlExcursiones.setFont(new java.awt.Font("SimHei", 1, 14)); // NOI18N
        jlExcursiones.setText("              EXCURSIONES");
        jlExcursiones.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 51), 3, true));

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("¿ Se puede surfear ?");

        bSi.setBackground(new java.awt.Color(0, 255, 102));
        bSi.setText("SI");
        bSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSiActionPerformed(evt);
            }
        });

        bNo.setBackground(new java.awt.Color(255, 0, 0));
        bNo.setText("NO");
        bNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bSi, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(bNo, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bSi, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bNo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jlTiempo.setBackground(new java.awt.Color(255, 0, 0));
        jlTiempo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlTiempo.setText("   NOTIFICACIONES TIEMPO");
        jlTiempo.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 0, 0)));

        jlNotificacionesTiempo.setText("  1");
        jlNotificacionesTiempo.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 51, 51)));

        bConfiguracion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/settings.png"))); // NOI18N
        bConfiguracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConfiguracionActionPerformed(evt);
            }
        });

        bSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit.png"))); // NOI18N
        bSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirActionPerformed(evt);
            }
        });

        bEditaPosibilidad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pencil.png"))); // NOI18N
        bEditaPosibilidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditaPosibilidadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                            .addComponent(jlGerente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bEditaPosibilidad, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(122, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlColectivas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlIndividuales, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlKayak, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlSurf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(108, 108, 108))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jlExcursiones, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(317, 317, 317))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jlTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jlNotificacionesTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(149, 149, 149))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bConfiguracion)
                        .addGap(37, 37, 37)
                        .addComponent(bSalir)
                        .addGap(27, 27, 27))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bSalir)
                            .addComponent(bConfiguracion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlTiempo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlNotificacionesTiempo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jlNombre))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jlDireccion))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jlGerente)))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(bEditaPosibilidad)))
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlColectivas, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlKayak, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlIndividuales, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlSurf, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addComponent(jlExcursiones, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
        );
    }// </editor-fold>//GEN-END:initComponents
/**
 * Al pulsar no se define la posibilidad de surfear como negativa
 * @param evt 
 */
    private void bNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNoActionPerformed
        
        try {
            JSONObject respuesta = cpl.setPosibilidadSurfear("no",usuarioescuela);
            if (respuesta.getString("resultado").equals("incorrecto")) {
                JOptionPane.showMessageDialog(this, "Error al cambiar la posibilidad", "Error", JOptionPane.ERROR_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, "Posibilidad de surfear cambiado a NO", "Posibilidad surfear", JOptionPane.INFORMATION_MESSAGE);
                bSi.setEnabled(false);
                bNo.setEnabled(true);
            }
        } catch (JSONException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bNoActionPerformed
/**
 * Al pulsar el botón de configuración, se abre el panel que nos permite ver y modificar los datos de nuestro perfil
 * @param evt 
 */
    private void bConfiguracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConfiguracionActionPerformed
        JFrame f = (JFrame) SwingUtilities.windowForComponent(bConfiguracion);
        Dimension ss = Toolkit.getDefaultToolkit().getScreenSize();
                f.setBounds(ss.width / 2 - ConfiguracionPerfil.width/ 2,
                    ss.height / 2 - ConfiguracionPerfil.height / 2,
                    ConfiguracionPerfil.width, ConfiguracionPerfil.height);
                    ConfiguracionPerfil cp = new ConfiguracionPerfil(usuarioescuela);
                    f.setContentPane(cp);
                    f.pack();
                    f.setVisible(true);
                    f.setResizable(false);
    }//GEN-LAST:event_bConfiguracionActionPerformed
/**
 * Al pulsar salir, volver al login
 * @param evt 
 */
    private void bSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirActionPerformed
                PrincipalFrame f = (PrincipalFrame) SwingUtilities.windowForComponent(bNo);
                Dimension ss = Toolkit.getDefaultToolkit().getScreenSize();
                f.setBounds(ss.width / 2 - Login.width/ 2,
                    ss.height / 2 - Login.height / 2,
                    Login.width, Login.height);
                Login lo = new Login();
                f.setContentPane(lo);
                f.pack();
                f.setVisible(true);
                f.setResizable(false);
    }//GEN-LAST:event_bSalirActionPerformed
/**
 * Al pulsar si, determinamos la posibilidad de surfear como positiva.
 * @param evt 
 */
    private void bSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSiActionPerformed
        try {
            JSONObject respuesta = cpl.setPosibilidadSurfear("si",usuarioescuela);
            if (respuesta.getString("resultado").equals("incorrecto")) {
                JOptionPane.showMessageDialog(this, "Error al cambiar la posibilidad", "Error", JOptionPane.ERROR_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, "Posibilidad de surfear cambiado a SI", "Posibilidad surfear", JOptionPane.INFORMATION_MESSAGE);
                bNo.setEnabled(false);
                bSi.setEnabled(true);
            }
        } catch (JSONException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bSiActionPerformed
/**
 * Para poder editar la posibilidad de surfear, tenemos que pulsar antes en este botón que nos activa los botones de sí y no
 * @param evt 
 */
    private void bEditaPosibilidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditaPosibilidadActionPerformed
       bSi.setEnabled(true);
       bNo.setEnabled(true);
    }//GEN-LAST:event_bEditaPosibilidadActionPerformed
    /**
     * Este método se ejecuta al inicio del panel y coloca todos los datos de la escuela, y rellena los booleanos que nos permitirán acceder 
     * o no a las diferentes opciones, según si las tenemos configuradas o no
     */
    public  void colocaValores(){
        try {
            JSONObject respuesta=cpl.datosEscuela(usuarioescuela);
            
            if(respuesta.getString("resultado").equals("incorrecto")){
                JOptionPane.showMessageDialog(this, "Error al recuperar datos", "Error", JOptionPane.ERROR_MESSAGE);
            }else{
                nombre=respuesta.getString("nombre");
                Client.nombreescuela=nombre;
                gerente=respuesta.getString("gerente");
                latitud=respuesta.getString("latitud");
                longitud=respuesta.getString("longitud");
                direccion=respuesta.getString("direccion");
                descripcion=respuesta.getString("descripcion");
                posibilidadsurfear=respuesta.getInt("posibilidadsurfear");
                contrasena=respuesta.getString("contrasena");
                colectivas=respuesta.getInt("colectivas");
                individuales=respuesta.getInt("individuales");
                excursiones=respuesta.getInt("excursiones");
                alquilerkayak=respuesta.getInt("alquilerkayak");
                alquilersurf=respuesta.getInt("alquilersurf");
                if(colectivas==0){
                    activocolec=false;
                    jlColectivas.setEnabled(false);
                    jlColectivas.setBorder(new LineBorder(new Color(153,153,153),3,true));
                    jlColectivas.setForeground(new Color(204,204,204));
                    
                }
                if(individuales==0){
                    activoindv=false;
                    jlIndividuales.setEnabled(false);
                    jlIndividuales.setBorder(new LineBorder(new Color(153,153,153),3,true));
                    jlIndividuales.setForeground(new Color(204,204,204));
                    ;
                }
                if(excursiones==0){
                    activoexc=false;
                    jlExcursiones.setEnabled(false);
                    jlExcursiones.setBorder(new LineBorder(new Color(153,153,153),3,true));
                    jlExcursiones.setForeground(new Color(204,204,204));
                }
                if(alquilerkayak==0){
                    activokayak=false;
                    jlKayak.setEnabled(false);
                    jlKayak.setBorder(new LineBorder(new Color(153,153,153),3,true));
                    jlKayak.setForeground(new Color(204,204,204));
                }
                if(alquilersurf==0){
                    activosurf=false;
                    jlSurf.setEnabled(false);
                    jlSurf.setBorder(new LineBorder(new Color(153,153,153),3,true));
                    jlSurf.setForeground(new Color(204,204,204));
                }
                if(posibilidadsurfear==1){
                    bNo.setEnabled(false);
                }
                if(posibilidadsurfear==2){
                    bSi.setEnabled(false);
                }
                jlNombre.setText(nombre);
                jlGerente.setText(gerente);
                jlDireccion.setText(direccion);
                
            }
            /**
             * Comprobamos si tiene alguna alerta por tiempo, si la tiene se coloca el número en las notificaciones de tiempo, y se permite
             * pulsar en el.
             */
            respuesta=cpl.getAlertas(Client.nombreescuela);
             JSONArray array = respuesta.getJSONArray("excursiones");
             jlNotificacionesTiempo.setText(array.length()+"");
             if(array.length()>0){
                 activonotif=true;
             }
            
            jlKayak.addMouseListener(new MouseAdapter()
            {
                public void mouseClicked(MouseEvent e)
                {   if(activokayak){
                    JFrame f = (JFrame) SwingUtilities.windowForComponent(bConfiguracion);
                    Dimension ss = Toolkit.getDefaultToolkit().getScreenSize();
                    f.setBounds(ss.width / 2 - ConfiguracionPerfil.width/ 2,
                            ss.height / 2 - ConfiguracionPerfil.height / 2,
                            ConfiguracionPerfil.width, ConfiguracionPerfil.height);
                    AlquilerKayak ak = new AlquilerKayak(usuarioescuela);
                    f.setContentPane(ak);
                    f.pack();
                    f.setVisible(true);
                    f.setResizable(false);
                  }
                    
                }
            });
            
            jlSurf.addMouseListener(new MouseAdapter()
            {
                public void mouseClicked(MouseEvent e)
                {
                    if(activosurf){
                    JFrame f = (JFrame) SwingUtilities.windowForComponent(bConfiguracion);
                    Dimension ss = Toolkit.getDefaultToolkit().getScreenSize();
                    f.setBounds(ss.width / 2 - ConfiguracionPerfil.width/ 2,
                            ss.height / 2 - ConfiguracionPerfil.height / 2,
                            ConfiguracionPerfil.width, ConfiguracionPerfil.height);
                    AlquilerSurf as = new AlquilerSurf(usuarioescuela);
                    f.setContentPane(as);
                    f.setVisible(true);
                    f.setResizable(false);
                    }
                }
            });  
            jlExcursiones.addMouseListener(new MouseAdapter()
            {
                public void mouseClicked(MouseEvent e)
                {
                    if(activoexc){
                    JFrame f = (JFrame) SwingUtilities.windowForComponent(bConfiguracion);
                    Dimension ss = Toolkit.getDefaultToolkit().getScreenSize();
                    f.setBounds(ss.width / 2 - ConfiguracionPerfil.width/ 2,
                            ss.height / 2 - ConfiguracionPerfil.height / 2,
                            ConfiguracionPerfil.width, ConfiguracionPerfil.height);
                    ExcursionPrincipal ep = new ExcursionPrincipal(usuarioescuela);
                    f.setContentPane(ep);
                    f.setVisible(true);
                    }
                }
            });    
            
              jlColectivas.addMouseListener(new MouseAdapter()
            {
                public void mouseClicked(MouseEvent e)
                {
                    if(activocolec){
                    JFrame f = (JFrame) SwingUtilities.windowForComponent(bConfiguracion);
                    Dimension ss = Toolkit.getDefaultToolkit().getScreenSize();
                    f.setBounds(ss.width / 2 - ConfiguracionPerfil.width/ 2,
                            ss.height / 2 - ConfiguracionPerfil.height / 2,
                            ConfiguracionPerfil.width, ConfiguracionPerfil.height);
                    ClasesColectivas ep = new ClasesColectivas(usuarioescuela);
                    f.setContentPane(ep);
                    f.setVisible(true);
                    }
                }
            }); 
             
              jlIndividuales.addMouseListener(new MouseAdapter()
            {
                public void mouseClicked(MouseEvent e)
                {
                    if(activoexc){
                    JFrame f = (JFrame) SwingUtilities.windowForComponent(bConfiguracion);
                    Dimension ss = Toolkit.getDefaultToolkit().getScreenSize();
                    f.setBounds(ss.width / 2 - ConfiguracionPerfil.width/ 2,
                            ss.height / 2 - ConfiguracionPerfil.height / 2,
                            ConfiguracionPerfil.width, ConfiguracionPerfil.height);
                    ClasesIndividuales ep = new ClasesIndividuales(usuarioescuela);
                    f.setContentPane(ep);
                    f.setVisible(true);
                    }
                }
            }); 
              
              jlTiempo.addMouseListener(new MouseAdapter()
            {
                public void mouseClicked(MouseEvent e)
                {
                    if(activonotif){
                    JFrame f = (JFrame) SwingUtilities.windowForComponent(bConfiguracion);
                    Dimension ss = Toolkit.getDefaultToolkit().getScreenSize();
                    f.setBounds(ss.width / 2 - Notificaciones.width/ 2,
                            ss.height / 2 - Notificaciones.height / 2,
                            Notificaciones.width, Notificaciones.height);
                    Notificaciones ep = new Notificaciones(usuarioescuela);
                    f.setContentPane(ep);
                    f.setVisible(true);
                    }
                }
            }); 
              
              jlNotificacionesTiempo.addMouseListener(new MouseAdapter()
            {
                public void mouseClicked(MouseEvent e)
                {
                    if(activonotif){
                    JFrame f = (JFrame) SwingUtilities.windowForComponent(bConfiguracion);
                    Dimension ss = Toolkit.getDefaultToolkit().getScreenSize();
                    f.setBounds(ss.width / 2 - Notificaciones.width/ 2,
                            ss.height / 2 - Notificaciones.height / 2,
                            Notificaciones.width, Notificaciones.height);
                    Notificaciones ep = new Notificaciones(usuarioescuela);
                    f.setContentPane(ep);
                    f.setVisible(true);
                    }
                }
            }); 
        
        } catch (JSONException ex) { 
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bConfiguracion;
    private javax.swing.JButton bEditaPosibilidad;
    private javax.swing.JButton bNo;
    private javax.swing.JButton bSalir;
    private javax.swing.JButton bSi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jlColectivas;
    private javax.swing.JLabel jlDireccion;
    private javax.swing.JLabel jlExcursiones;
    private javax.swing.JLabel jlGerente;
    private javax.swing.JLabel jlIndividuales;
    private javax.swing.JLabel jlKayak;
    private javax.swing.JLabel jlNombre;
    private javax.swing.JLabel jlNotificacionesTiempo;
    private javax.swing.JLabel jlSurf;
    private javax.swing.JLabel jlTiempo;
    // End of variables declaration//GEN-END:variables
}
