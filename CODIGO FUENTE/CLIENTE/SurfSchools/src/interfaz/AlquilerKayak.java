/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import cliente.Client;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.json.JsonObject;
import javax.swing.BoxLayout;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import protocolo.ClientProtocol;

/**
 *
 * @author pablo
 */
public class AlquilerKayak extends javax.swing.JPanel {

    /**
     * Panel que gestiona el Alquiler de Kayaks, se muestra cuando en Principal se pusa en AlquilerKayak
     */
     String usuarioescuela;
     ClientProtocol cpl;
     String preciohora;
     String preciodia;
     String alquiler="kayak";
     String lista="aprob";
     boolean activo=false;
    
     static int width=958;
    static int height=725;
    
       
    public AlquilerKayak(String usuarioescuela){
         this.usuarioescuela=usuarioescuela;
        cpl=Client.getClientProtocol();
        initComponents();
        colocaValores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtxPrecioDia = new javax.swing.JTextField();
        jtxPrecioHora = new javax.swing.JTextField();
        labelLista = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        bAtras = new javax.swing.JButton();
        beditaHora = new javax.swing.JButton();
        beditaDia = new javax.swing.JButton();
        bGuardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelSolicitudes = new javax.swing.JPanel();
        jlNotif = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo-login.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setText("ALQUILER KAYAK");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Precio por hora:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Precio por día:");

        jtxPrecioDia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtxPrecioDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxPrecioDiaActionPerformed(evt);
            }
        });

        jtxPrecioHora.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtxPrecioHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxPrecioHoraActionPerformed(evt);
            }
        });

        labelLista.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelLista.setText("APROBADAS");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("€");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("€");

        bAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/atras.png"))); // NOI18N
        bAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAtrasActionPerformed(evt);
            }
        });

        beditaHora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pencil.png"))); // NOI18N
        beditaHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beditaHoraActionPerformed(evt);
            }
        });

        beditaDia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pencil.png"))); // NOI18N
        beditaDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beditaDiaActionPerformed(evt);
            }
        });

        bGuardar.setText("Guardar");
        bGuardar.setEnabled(false);
        bGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarActionPerformed(evt);
            }
        });

        panelSolicitudes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panelSolicitudesLayout = new javax.swing.GroupLayout(panelSolicitudes);
        panelSolicitudes.setLayout(panelSolicitudesLayout);
        panelSolicitudesLayout.setHorizontalGroup(
            panelSolicitudesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 589, Short.MAX_VALUE)
        );
        panelSolicitudesLayout.setVerticalGroup(
            panelSolicitudesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 505, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panelSolicitudes);

        jlNotif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/notification.png"))); // NOI18N
        jlNotif.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(bAtras))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 8, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bGuardar)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(beditaHora, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jtxPrecioHora, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(beditaDia, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jtxPrecioDia, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel7))))
                                .addGap(61, 61, 61)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(265, 265, 265)
                                .addComponent(labelLista)
                                .addGap(251, 251, 251))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(131, 131, 131)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlNotif)
                        .addGap(102, 102, 102))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlNotif)
                        .addGap(16, 16, 16)))
                .addGap(0, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bAtras)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(jtxPrecioHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addComponent(beditaHora))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jtxPrecioDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7))
                            .addComponent(beditaDia))
                        .addGap(32, 32, 32)
                        .addComponent(bGuardar)
                        .addGap(370, 370, 370))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelLista)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtxPrecioDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxPrecioDiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxPrecioDiaActionPerformed

    private void jtxPrecioHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxPrecioHoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxPrecioHoraActionPerformed
    /**
     * Cuando se pulsa el botón de atrás se vuelve a la pantalla principal
     * @param evt 
     */
    private void bAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAtrasActionPerformed

        PrincipalFrame f = (PrincipalFrame) SwingUtilities.windowForComponent(bAtras);
        Dimension ss = Toolkit.getDefaultToolkit().getScreenSize();
        f.setBounds(ss.width / 2 - Principal.width / 2,
                ss.height / 2 - Principal.height / 2,
                Principal.width, Principal.height);
        Principal pp = new Principal(usuarioescuela);
        f.setContentPane(pp);
        f.pack();
        f.setSize(958, 725);
        f.setVisible(true);   
    }//GEN-LAST:event_bAtrasActionPerformed

    /**
     * Al pulsar en el botón para editar el precio de la hora, se pide un nuevo precio y se guarda en la variable global.
     * Se activa el botón de guardar.
     * @param evt 
     */
    private void beditaHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beditaHoraActionPerformed
      
        
        String spreciohora = JOptionPane.showInputDialog("Introduzca nuevo precio para la hora: ");
        if (spreciohora.equals("")) {
            JOptionPane.showMessageDialog(this, "No puede dejar el campo vacío", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            preciohora=spreciohora;
            bGuardar.setEnabled(true);
            jtxPrecioHora.setText(preciohora);
        }
    }//GEN-LAST:event_beditaHoraActionPerformed

    /**
     * Al pulsar en el botón para editar el precio del día, se pide un nuevo precio y se guarda en la variable global.
     * Se activa el botón de guardar.
     * @param evt 
     */
    private void beditaDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beditaDiaActionPerformed
        String spreciodia = JOptionPane.showInputDialog("Introduzca nuevo precio para el dia: ");
        if (spreciodia.equals("")) {
            JOptionPane.showMessageDialog(this, "No puede dejar el campo vacío", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            preciodia=spreciodia;
            bGuardar.setEnabled(true);
            jtxPrecioDia.setText(preciodia);
        }
    }//GEN-LAST:event_beditaDiaActionPerformed
/**
 * Al pulsar en el botón guardar se actualizan los precios de esa escuela
 * @param evt 
 */
    private void bGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarActionPerformed
        
        
         try {
             JSONObject respuesta=cpl.setPrecios(usuarioescuela,preciohora,preciodia,alquiler);
             if(respuesta.getString("resultado").equals("incorrecto")){
                 JOptionPane.showMessageDialog(this, "Error al actualizar", "Error", JOptionPane.ERROR_MESSAGE);
             }else{
                 JOptionPane.showMessageDialog(this, "Actualizado correctamente", "Correcto", JOptionPane.INFORMATION_MESSAGE);
             } } catch (JSONException ex) {
             Logger.getLogger(AlquilerKayak.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_bGuardarActionPerformed

    /**
     * Este método es el que se encarga de mostrar las solicitudes de alquiler en el panel de la derecha.
     * Se obtienen las solicitudes y se crea un objeto Panel que será el que se va a mostrar.
     */
    private void initSolicitudes(){
         panelSolicitudes.setLayout(new BoxLayout(panelSolicitudes, BoxLayout.Y_AXIS));
          try {
     
         String nombre,telefono,cantidad,fecha,hora,factura,usuario;
         int icantidad,idalquiler,aprobado,cancelado;
         JSONObject respuesta = cpl.getAlquileres(usuarioescuela, alquiler);
            JSONArray array = respuesta.getJSONArray("alquileres");
           int solicitudes=0;
        for (int i = 0; i < array.length(); i++) {
           
                 JSONObject row = array.getJSONObject(i);
                 nombre=row.getString("nombre");
                 telefono=row.getString("telefono");
                 icantidad=row.getInt("cantidad");
                 cantidad=Integer.toString(icantidad);
                 fecha=row.getString("fecha");
                 hora=row.getString("hora");
                 factura=row.getString("factura");
                 usuario=row.getString("usuario");
                 idalquiler=row.getInt("idalquiler");
                 aprobado=row.getInt("aprobado");
                 cancelado=row.getInt("cancelado");
                 if(aprobado!=1 && cancelado!=1){
                     solicitudes++;
                 PanelSolicitud newPanel = new PanelSolicitud(nombre,telefono,cantidad,fecha,hora,factura,usuario,idalquiler,aprobado,cancelado,alquiler);
                panelSolicitudes.add(newPanel);
                //panelSolicitudes.revalidate();
                 }
            
        }
       
        panelSolicitudes.setVisible(true);
         } catch (JSONException ex) {
                 Logger.getLogger(AlquilerSurf.class.getName()).log(Level.SEVERE, null, ex);
             }
       
          
              //  MyBtnAction mba=new MyBtnAction(nombre);
             
             
         

    }
     /**
     * Este método es el que se encarga de mostrar las solicitudes aprobadas de alquiler en el panel de la derecha.
     * Se obtienen las solicitudes y se crea un objeto Panel que será el que se va a mostrar.
     */
    private void initAprobadas(){
         panelSolicitudes.setLayout(new BoxLayout(panelSolicitudes, BoxLayout.Y_AXIS));
          try {
     
         String nombre,telefono,cantidad,fecha,hora,factura,usuario;
         int icantidad,idalquiler,aprobado,cancelado,realizado;
         JSONObject respuesta = cpl.getAlquileres(usuarioescuela, alquiler);
            JSONArray array = respuesta.getJSONArray("alquileres");
           int solicitudes=0;
        for (int i = 0; i < array.length(); i++) {
           
                 JSONObject row = array.getJSONObject(i);
                 nombre=row.getString("nombre");
                 telefono=row.getString("telefono");
                 icantidad=row.getInt("cantidad");
                 cantidad=Integer.toString(icantidad);
                 fecha=row.getString("fecha");
                 hora=row.getString("hora");
                 factura=row.getString("factura");
                 usuario=row.getString("usuario");
                 idalquiler=row.getInt("idalquiler");
                 aprobado=row.getInt("aprobado");
                 cancelado=row.getInt("cancelado");
                 realizado=row.getInt("realizado");
                 if(aprobado!=1&&cancelado!=1){
                     solicitudes++;
                 }else if(cancelado!=1 && realizado!=1){
                 PanelSolicitud newPanel = new PanelSolicitud(nombre,telefono,cantidad,fecha,hora,factura,usuario,idalquiler,aprobado,cancelado,alquiler);
                panelSolicitudes.add(newPanel);
                 }
                 
                 if(solicitudes>0){
                     jlNotif.setEnabled(true);
                     activo=true;
                 }else{
                     jlNotif.setEnabled(false);
                     activo=false;
                 }
                //panelSolicitudes.revalidate();
                 
            
        }
        
        panelSolicitudes.setVisible(true);
         } catch (JSONException ex) {
                 Logger.getLogger(AlquilerSurf.class.getName()).log(Level.SEVERE, null, ex);
             }
       
          
              //  MyBtnAction mba=new MyBtnAction(nombre);
             
             
         

    }
    /**
     * Obtiene los precios definidos por la escuela y los coloca en las cajas de texto correspondiente
     */
    public void colocaValores(){
         try {
             JSONObject respuesta=cpl.getPrecios(usuarioescuela);
             if(respuesta.getString("resultado").equals("incorrecto")){
                 JOptionPane.showMessageDialog(this, "Error al recuperar datos", "Error", JOptionPane.ERROR_MESSAGE);
             }else{
                 preciohora=respuesta.getString("kayakhora");
                 preciodia=respuesta.getString("kayakdia");
                 if(!preciohora.equals("0")){
                     jtxPrecioHora.setText(preciohora);
                     jtxPrecioHora.setEditable(false);
                 }else{
                     jtxPrecioHora.setText("No definido");
                     jtxPrecioHora.setEditable(false);
                 }
                 if(!preciodia.equals("0")){
                     jtxPrecioDia.setText(preciodia);
                     jtxPrecioHora.setEditable(false);
                 }else{
                     jtxPrecioDia.setText("No definido");
                     jtxPrecioDia.setEditable(false);
                 }
                 
                  initAprobadas();
               
                  
                  /**
                   * Si se pulsa en el botón de las notificaciones según lo que se esté mostrando, ya sean las aprobadas o las pendientes
                   * se muestra lo contrario
                   */
                  jlNotif.addMouseListener(new MouseAdapter()
            {
                public void mouseClicked(MouseEvent e)
                {
                    if(lista.equals("aprob")){
                        if(activo){
                        panelSolicitudes.removeAll();
                        initSolicitudes();
                        labelLista.setText("SOLICITUDES");
                        lista="solic";
                        jlNotif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/list.png")));
                        }
                    }else{
                        panelSolicitudes.removeAll();
                        initAprobadas();
                        labelLista.setText("APROBADAS");
                        lista="aprob";
                        jlNotif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/notification.png")));
                    }
                }
            }); 
                
                 
             } } catch (JSONException ex) {
             Logger.getLogger(AlquilerKayak.class.getName()).log(Level.SEVERE, null, ex);
         }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAtras;
    private javax.swing.JButton bGuardar;
    private javax.swing.JButton beditaDia;
    private javax.swing.JButton beditaHora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlNotif;
    private javax.swing.JTextField jtxPrecioDia;
    private javax.swing.JTextField jtxPrecioHora;
    private javax.swing.JLabel labelLista;
    private javax.swing.JPanel panelSolicitudes;
    // End of variables declaration//GEN-END:variables
}
